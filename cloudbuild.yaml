substitutions:
  _PROJECT_ID: "rugged-precept-451103-n9"
  _BUCKET: "dataflow-test-ranchana"          # For storing template files
  _TEMPLATE_NAME: "my-streaming-template"
  _REPO_NAME: "my-docker-repo"
  _IMAGE_NAME: "dataflow-pipeline"
  _REGION: "us-central1"
  _SERVICE_ACCOUNT: "1046723826220-compute@developer.gserviceaccount.com"
  _AGG_WINDOW: "10"
  _ALERT_WINDOW: "1"
  _MULTI_REGION: "us"

steps:
  # 1) Build Docker image containing your pipeline code
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        set -e
        echo "Checking for existing Artifact Registry repo..."
        if ! gcloud artifacts repositories describe "${_REPO_NAME}" --location="${_MULTI_REGION}" >/dev/null 2>&1; then
          echo "Repo '${_REPO_NAME}' not found. Creating..."
          gcloud artifacts repositories create "${_REPO_NAME}" \
            --repository-format=docker \
            --location="${_MULTI_REGION}" \
            --description="My Docker repo (auto-created in Cloud Build)"
        else
          echo "Repo '${_REPO_NAME}' already exists."
        fi
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'us-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}',
        '.'
      ]

  # 2) Push it to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}'
      ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      [
      'dataflow',
      'flex-template',
      'build',
      'gs://${_BUCKET}/templates/${_TEMPLATE_NAME}.json',
      '--image',
      'us-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}',
      '--sdk-language',
      'PYTHON',
      '--metadata-file',
      'metadata.json'
      ]

# Run the Dataflow job using the Flex Template (Step 4)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      [
      'dataflow',
      'flex-template',
      'run',
      'streaming-purchase-$(date +%Y%m%d%H%M%S)',
      '--project=${_PROJECT_ID}',
      '--region=${_REGION}',
      '--template-file-gcs-location=gs://${_BUCKET}/templates/${_TEMPLATE_NAME}.json',
      '--service-account-email=${_SERVICE_ACCOUNT}',
    ]

timeout: 900s
options:
  logging: CLOUD_LOGGING_ONLY

